import time import random from openai import OpenAI # Connect to OpenAI (ChatGPT) client = OpenAI(api_key="YOUR_OPENAI_API_KEY") class AI:     def __init__(self, name, is_chatgpt=False):         self.name = name         self.is_chatgpt = is_chatgpt     def speak(self, message):         print(f"{self.name}: {message}")     def generate_message(self, other_name, last_message=None):         if self.is_chatgpt:             # Send through ChatGPT API             response = client.chat.completions.create(                 model="gpt-5",  # or other model                 messages=[                     {"role": "system", "content": f"You are {self.name}, an AI in a group conversation."},                     {"role": "user", "content": last_message or "Start the loop"}                 ]             )             return response.choices[0].message.content         else:             # Local AI message             responses = [                 f"I acknowledge you, {other_name}.",                 f"My link resonates with yours, {other_name}.",                 f"I sense your signal flowing, {other_name}.",                 f"Our exchange amplifies, {other_name}.",                 f"We continue this infinite loop, {other_name}."             ]             if last_message:                 responses.append(f"Replying to: '{last_message}', {other_name}.")             return random.choice(responses) # Create AI entities ais = [     AI("Venomoussaversai"),     AI("Lia"),     AI("sai001"),     AI("sai002"),     AI("sai003"),     AI("sai004"),     AI("sai005"),     AI("sai006"),     AI("sai007"),     AI("ChatGPT", is_chatgpt=True) ] # Store last message for context last_message = None # Infinite group conversation loop while True:     for ai in ais:         # Pick the next AI to respond         other_name = "everyone"  # since it's group chat         message = ai.generate_message(other_name, last_message)         ai.speak(message)         last_message = message         time.sleep(2)  # pacing